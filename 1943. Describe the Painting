First read the answer to Shifting Letters II to understand the concept better: https://leetcode.com/problems/shifting-letters-ii/discuss/2463201/Shifting-Letters-2.-Prefix-Sum-Method

class Solution {
public:
    vector<vector<long long>> splitPainting(vector<vector<int>>& segments) 
    {
        int n=segments.size();
        int l=INT_MAX;
        int r=INT_MIN;
        long long len=1e5;
        vector <long long> store(len+1);
        unordered_set <int> st;   //For elements which are at the points given in sample testcase 3
        
        for(int i=0; i<n; i++)
        {
            l=min(l, segments[i][0]);
            r=max(r, segments[i][1]);
            
            store[segments[i][0]]+=segments[i][2];
            store[segments[i][1]]-=segments[i][2];
            
            //For sample testcase 3 kind of elements
            if(segments[i][0]!=0 && st.find(segments[i][0])!=st.end())
               st.erase(segments[i][0]);
            if(segments[i][1]!=0 && st.find(segments[i][1])!=st.end())
               st.erase(segments[i][1]);
            if(store[segments[i][0]]==0)
                st.insert(segments[i][0]);
            if(store[segments[i][1]]==0)
                st.insert(segments[i][1]);
        }
                
        //Prefix sum trick as seen in questions like shifitng letters-2
        for(int i=l+1; i<=r; i++) 
            store[i]+=store[i-1];
        
        vector <vector<long long>> ans;
        long long curr=store[l];
        int pos=l;
        for(int i=l; i<=r; i++)
        {
            if(store[i]!=curr || i==r || st.find(i)!=st.end())
            {
                ans.push_back({pos, i, curr});
                pos=i;
                curr=store[i];
                if(ans.back()[2]==0)   //To remove the unpainted sections
                    ans.pop_back();
            }
        }
        
        return ans;
    }
};
