class Solution {
public:
    vector<int> pref , suff ;
    int countTriplets(vector<int>& nums) {
        
        for(int i = 0 ; i < size(nums) ; ++i ) pref.push_back(pref.empty() ? nums[i] : nums[i] ^ pref.back()) ;
        for(int i = size(nums) - 1 ; i >= 0 ; --i) suff.push_back(suff.empty() ? nums[i] : nums[i] ^ suff.back()) ;
        reverse(begin(suff),end(suff)) ;
        
        int ans = 0 ;
        for(int i = 0 ; i < size(nums) ; ++i ){
            for(int j = i + 1; j < size(nums); ++j ){
                for(int k = j  ; k < size(nums) ; ++k ){
				//j and k can be same 
                    int left = pref[j-1] ^ (i-1 >= 0 ? pref[i-1] : 0) ;
                    int right = suff[j] ^ (k + 1 < size(nums) ? suff[k + 1] : 0) ;
                    ans += left == right ;
                }
            }
        }
        return ans ;
        
        
        
    }
};
